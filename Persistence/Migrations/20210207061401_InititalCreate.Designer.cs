// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.DataContext;

namespace Persistence.Migrations
{
    [DbContext(typeof(YourLawyerContext))]
    [Migration("20210207061401_InititalCreate")]
    partial class InititalCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.11");

            modelBuilder.Entity("Domain.Models.AreaOfLaw", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AreaOfLawName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AreaOfLaws");

                    b.HasData(
                        new
                        {
                            Id = new Guid("77b98aad-794b-476d-82ea-4657b6f497e2"),
                            AreaOfLawName = "Case"
                        },
                        new
                        {
                            Id = new Guid("1d0da5be-2a5c-4dd9-aad9-98e0054997bc"),
                            AreaOfLawName = "Criminal"
                        });
                });

            modelBuilder.Entity("Domain.Models.Division", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Divisions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("67752983-6694-4fec-a919-c96aa5a47bbc"),
                            Name = "Dhaka"
                        },
                        new
                        {
                            Id = new Guid("cc77b860-7ff2-4ef1-9fb8-c2ed2f3967af"),
                            Name = "Chittagong"
                        },
                        new
                        {
                            Id = new Guid("8798ea69-ec65-4813-a5ee-1aad581cb546"),
                            Name = "Rajshahi"
                        },
                        new
                        {
                            Id = new Guid("b0d29ac1-74ee-413d-b05f-9e0b1cf74dd2"),
                            Name = "Khulna"
                        },
                        new
                        {
                            Id = new Guid("c4571dd4-ca0b-4781-a059-8f17ce0ab2cb"),
                            Name = "Sylhet"
                        },
                        new
                        {
                            Id = new Guid("e4db70cb-001d-4776-bf83-586f94385084"),
                            Name = "Comilla"
                        },
                        new
                        {
                            Id = new Guid("722f5f32-8398-4912-9f09-99ea57dd5c9e"),
                            Name = "Barisal"
                        },
                        new
                        {
                            Id = new Guid("32b7e7c9-d7fa-43b2-93b3-1c025ec2ee3b"),
                            Name = "Rangpur "
                        });
                });

            modelBuilder.Entity("Domain.Models.Lawyer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Degree")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DivisionId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndingOfficeHour")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProfileImageLocation")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartingOfficeHour")
                        .HasColumnType("TEXT");

                    b.Property<int>("WorkingExperience")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.ToTable("Lawyers");
                });

            modelBuilder.Entity("Domain.Models.LawyerAndAreaOfLaw", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AreaOfLawId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("LawyerId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AreaOfLawId");

                    b.HasIndex("LawyerId");

                    b.ToTable("LawyerAndAreaOfLaws");
                });

            modelBuilder.Entity("Domain.Models.Lawyer", b =>
                {
                    b.HasOne("Domain.Models.Division", "Division")
                        .WithMany("Lawyers")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Models.LawyerAndAreaOfLaw", b =>
                {
                    b.HasOne("Domain.Models.AreaOfLaw", "AreaOfLaw")
                        .WithMany("LawyersUnderThisAreaOfLaw")
                        .HasForeignKey("AreaOfLawId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Lawyer", "Lawyer")
                        .WithMany("LawyersAreaOfLaws")
                        .HasForeignKey("LawyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
