// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.DataContext;

namespace Persistence.Migrations
{
    [DbContext(typeof(YourLawyerContext))]
    [Migration("20210217085018_SeedUpdated")]
    partial class SeedUpdated
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.11");

            modelBuilder.Entity("Domain.Models.AreaOfLaw", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AreaOfLawName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AreaOfLaws");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d9f5daa3-95bb-4a95-a62c-9ec628d73bf6"),
                            AreaOfLawName = "Banking and Finance Law"
                        },
                        new
                        {
                            Id = new Guid("b0a3a29c-296b-413b-991f-26afe35202bb"),
                            AreaOfLawName = "Civil Litigation"
                        },
                        new
                        {
                            Id = new Guid("b42bf1af-cd96-4fb7-9754-d4ac6ceb6995"),
                            AreaOfLawName = "Dispute Resolution"
                        },
                        new
                        {
                            Id = new Guid("f460f4f5-5336-42a4-b617-08cfa47add96"),
                            AreaOfLawName = "Commercial Law"
                        },
                        new
                        {
                            Id = new Guid("f4b69be2-d765-480d-a129-199b79e7f324"),
                            AreaOfLawName = "Construction Law"
                        },
                        new
                        {
                            Id = new Guid("de7be798-5516-4c89-9939-64df7f038761"),
                            AreaOfLawName = "Corporate Law"
                        },
                        new
                        {
                            Id = new Guid("102693e6-3b9c-4d7f-941f-3ee507e7ad44"),
                            AreaOfLawName = "Criminal Law"
                        },
                        new
                        {
                            Id = new Guid("7a5ef654-58ce-46de-a4aa-d335e1dac362"),
                            AreaOfLawName = "Family Law"
                        });
                });

            modelBuilder.Entity("Domain.Models.Division", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Divisions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5025f07c-6a17-4d51-a187-118028b0d287"),
                            Name = "Dhaka"
                        },
                        new
                        {
                            Id = new Guid("ad46fd7e-6e18-4baa-91c9-042fa88df7b7"),
                            Name = "Chittagong"
                        },
                        new
                        {
                            Id = new Guid("9e12a884-c936-4a59-a292-ec636e7b26c6"),
                            Name = "Rajshahi"
                        },
                        new
                        {
                            Id = new Guid("46411802-23e3-47e0-a307-5236d43e26f0"),
                            Name = "Khulna"
                        },
                        new
                        {
                            Id = new Guid("f01da635-fe55-4eed-b2fb-c44949cb1167"),
                            Name = "Sylhet"
                        },
                        new
                        {
                            Id = new Guid("60b50bcd-0170-4307-ba69-ee6893957724"),
                            Name = "Mymensingh"
                        },
                        new
                        {
                            Id = new Guid("2717c2f7-b989-4ae0-81a3-e23a73ef071d"),
                            Name = "Barisal"
                        },
                        new
                        {
                            Id = new Guid("953c65ff-c557-4330-a951-8094812d520f"),
                            Name = "Rangpur "
                        });
                });

            modelBuilder.Entity("Domain.Models.Lawyer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DivisionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LawyerRank")
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProfileImageLocation")
                        .HasColumnType("TEXT");

                    b.Property<int>("WorkingExperience")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.ToTable("Lawyers");
                });

            modelBuilder.Entity("Domain.Models.LawyerAndAreaOfLaw", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AreaOfLawId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("LawyerId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AreaOfLawId");

                    b.HasIndex("LawyerId");

                    b.ToTable("LawyerAndAreaOfLaws");
                });

            modelBuilder.Entity("Domain.Models.LawyerEducationalBG", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Degree")
                        .HasColumnType("TEXT");

                    b.Property<string>("Institute")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("LawyerId")
                        .HasColumnType("TEXT");

                    b.Property<int>("PassingYear")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("LawyerId");

                    b.ToTable("LawyerEducationalBGs");
                });

            modelBuilder.Entity("Domain.Models.Lawyer", b =>
                {
                    b.HasOne("Domain.Models.Division", "Division")
                        .WithMany("Lawyers")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Models.LawyerAndAreaOfLaw", b =>
                {
                    b.HasOne("Domain.Models.AreaOfLaw", "AreaOfLaw")
                        .WithMany("LawyersUnderThisAreaOfLaw")
                        .HasForeignKey("AreaOfLawId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Lawyer", "Lawyer")
                        .WithMany("LawyersAreaOfLaws")
                        .HasForeignKey("LawyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Models.LawyerEducationalBG", b =>
                {
                    b.HasOne("Domain.Models.Lawyer", "Lawyer")
                        .WithMany("LawyerEducationalBGs")
                        .HasForeignKey("LawyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
